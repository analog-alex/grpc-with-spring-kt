buildscript {
    ext {
        kotlinVersion = "1.4.20"
        springBootVersion = "2.4.3"
        grpcVersion = '1.25.0'
        protocVersion = '3.6.1'
    }
    repositories {
        mavenCentral()
        gradlePluginPortal()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
        classpath("com.google.protobuf:protobuf-gradle-plugin:0.8.15")
    }
}

group = 'io.analog.alex'
version = '1.0.0'

allprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-spring'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.google.protobuf'

    repositories {
        mavenCentral()
        gradlePluginPortal()
        jcenter()
    }

    configurations {
        ktlint
    }

    dependencies {
        implementation("org.springframework.boot:spring-boot-starter-actuator")
        implementation("org.springframework.boot:spring-boot-starter-web")

        implementation("io.grpc:grpc-netty:${grpcVersion}")
        implementation("io.grpc:grpc-protobuf:${grpcVersion}")
        implementation("io.grpc:grpc-stub:${grpcVersion}")

        implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
        implementation("org.jetbrains.kotlin:kotlin-reflect")
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2")
        testImplementation("org.springframework.boot:spring-boot-starter-test")

        ktlint("com.pinterest:ktlint:0.40.0")
    }

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    test {
        useJUnitPlatform()
    }

    protobuf {
        protoc {
            artifact = "com.google.protobuf:protoc:${protocVersion}"
        }
        plugins {
            grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
        }
        generateProtoTasks {
            all()*.plugins { grpc {} }
        }
    }

    task ktlintCheck(type: JavaExec, group: "verification") {
        description = "Check Kotlin code style."
        classpath = configurations.ktlint
        main = "com.pinterest.ktlint.Main"
        args "src/**/*.kt"
    }

    task ktlintFormat(type: JavaExec, group: "formatting") {
        description = "Fix Kotlin code style deviations."
        classpath = configurations.ktlint
        main = "com.pinterest.ktlint.Main"
        args "-F", "src/**/*.kt"
    }
}